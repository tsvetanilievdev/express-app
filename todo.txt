//Database - Mongo and Mongoose
schema, virtuals, validation,Population...
[X] - using virtual - totalValue, which is dynamic property 
[] - validation - in creation, methods, index for User

//Functionallities
[X] - searching by brand, model, description - using COMPOUND index
[] - sorting by price, extras
[] - pagination - limit and skip
[X] - delete extras by admin
[X] - User's catalog

//Colections
[X] - two main collections + user collection
[X] - relations
[X] - CRUD - with validation for empty fields
[X] - when delete an Extra, it removes from Shoes records

//Authentication - validation
[X] - User model
[X] - register,login,logout
[X] - user roles - user, admin
[X] - only admin can view and create extras page
[X] - owner of the record or admin can edit it!
[X] - owner of the record or admin can delete it!
[X] - private content - CRUD on own records
[X] - using cookies with JSW/session -- expiring jwt, clear expired jwt 
[X] - jwt and cookie will expire after 1 hour 
[X] - validation - empty fields, diffrent passwords, wrong credentials

//Navigation
[X] - show diffrent buttons after authentication
[X] - shows Admin logo

//Route guards
[X] - only user can see Create Page
[X] - only admin can see Extras Page
[X] - only owner or admin can see Edit and Delete Page

//Validation and Error
[X] - analyzing every type of error which could occor - exception, express-validator, mongoose validator
[X] - parseError function - which will parse errors in expected format for displaying them
[] - validator 
[] - custom validation - mongoose schema, express-validator

//try-catch everywhere!!!
[] - try-catch

//checking controllers ony by one - check and validation, expected errors
[X] - Auth
[X] - Catalog
[X] - My Catalog
[] - Edit
[] - Delete
[] - Extras


//Testing
[] - check CODE -
        - Use Descriptive Names. 
        - Give Each Class/Function One Purpose. 
        - Delete Unnecessary Code. 
        - Readability > Cleverness. 
        - Keep a Consistent Coding Style. 
        - Choose the Right Architecture. 
        - Master the Language's Idioms.
        - Study the Code of Masters
        - Write Good Comments
        - Refactor, Refactor, Refactor
[] - tests

//UI
[] - prettier css


//deployment???????????????/
---env???

//views
[] - welcome user message

//README.md
[] - better documentation

//Bugs
[] - to fix catalog page - card without working image is broken!
[] - to fix - when edit shoes, and added wrong input extras ara hiden!!

//To do 
[X] - username must contains only english letters. could contains numbers.
[] - shoes name and model and extras name MUST contain only english letters.could contains numbers


//USERS
--Admin - can create Extras, can edit and delete records
username: admin
password: 123

--Users - can edit and delete own recors
username: toto
password: 333

username:mario
password: 123456

username:daria
password: 123456