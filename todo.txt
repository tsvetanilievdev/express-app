//Database - Mongo and Mongoose
schema, virtuals, validation,Population...
[X] - using virtual - totalValue, which is dynamic property 
[] - validation - in creation, methods

//colections
[X] - two main collections + user collection
[X] - relations
[X] - CRUD - with validation for empty fields

//authentication - validation
[X] - User model
[X] - register,login,logout
[X] - user roles - user, admin
[X] - only admin can view and create extras page
[X] - owner of the record or admin can edit it!
[] - owner of the record or admin can delete it!
[X] - private content - CRUD on own records
[X] - using cookies with JSW/session -- expiring jwt, clear expired jwt 
[X] - jwt and cookie will expire after 1 hour 
[X] - validation - empty fields, diffrent passwords, wrong credentials

//navigation
[X] - show diffrent buttons after authentication
[] - only admin can see Extras Page

//Route guards
[X] - only user can see Create Page

//Functionallities
[X] - searching by brand, model, description - using COMPOUND index
[] - sorting by price, extras
[] - pagination - limit and skip
[] - edit and delete extras by admin

[] - About Page - form to send questions - new COllection Questions

//Testing
[] - check CODE -
        - Use Descriptive Names. 
        - Give Each Class/Function One Purpose. 
        - Delete Unnecessary Code. 
        - Readability > Cleverness. 
        - Keep a Consistent Coding Style. 
        - Choose the Right Architecture. 
        - Master the Language's Idioms.
        - Study the Code of Masters
        - Write Good Comments
        - Refactor, Refactor, Refactor
[] - test

//UI
[] - prettier css

//deployment


//README.md
[] - better documentation